type Query {
  players: [Player!]!
  player(id: Int!): Player!

  teams: [Team!]!
  team(id: Int!): Player!

  matches: [Match!]!
  match(id: Int!): Player!
}

type Mutation {
  addPlayer(data: CreatePlayer!): Player!
  updatePlayer(data: UpdatePlayer!): Player!

  addTeam(data: CreateTeam!): Team!
  updateTeam(data: UpdateTeam!): Team!

  addMatch(data: CreateMatch!): Match!
  updateMatch(data: UpdateMatch!): Match!
}

type Player {
  id: Int!
  name: String!
}

type Team {
  id: Int!
  name: String!
}

type Match {
  id: Int!
  name: String!
}

input CreatePlayer {
  id: Int!
  name: String!
}

input UpdatePlayer {
  id: Int!
  name: String!
}

input CreateTeam {
  id: Int!
  name: String!
}

input UpdateTeam {
  id: Int!
  name: String!
}

input CreateMatch {
  id: Int!
  name: String!
}

input UpdateMatch {
  id: Int!
  name: String!
}
